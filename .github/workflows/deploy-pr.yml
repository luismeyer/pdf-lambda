name: Deploy PR to dev stage

on:
  issue_comment:
    types: [created]

jobs:
  client:
    if: github.event.comment.body == '@github-actions deploy'
    runs-on: ubuntu-latest

    steps:
      - name: Setup
        id: setup
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const { id } = await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "Starting deployment..."
            });

            core.setOutput('comment_id', id);
            core.setOutput('sha', `${data.head.sha}`);

      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.setup.outputs.sha }}

      - name: Install
        run: npm install

      - name: Serverless create domain
        uses: serverless/github-action@master
        with:
          args: create_domain
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Serverless deploy
        uses: serverless/github-action@master
        with:
          args: deploy --stage dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Add deployed Comment
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.setup.outputs.sha }},
              body: "Deployed to https://dev-pdf.luimey.de",
            });
